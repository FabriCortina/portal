generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  firstName     String
  lastName      String
  role          Role      @default(USER)
  tenantId      String    // Para multi-tenant
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Client {
  id          String    @id @default(uuid())
  name        String
  email       String
  phone       String?
  tenantId    String    // Para multi-tenant
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  trackings   Tracking[]
}

model Collaborator {
  id          String    @id @default(uuid())
  name        String
  email       String
  role        String
  tenantId    String    // Para multi-tenant
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  trackings   Tracking[]
}

model Tracking {
  id              String       @id @default(uuid())
  clientId        String
  client          Client       @relation(fields: [clientId], references: [id])
  collaboratorId  String
  collaborator    Collaborator @relation(fields: [collaboratorId], references: [id])
  description     String
  status          String
  tenantId        String       // Para multi-tenant
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Query {
  id          String    @id @default(uuid())
  title       String
  content     String
  status      String
  tenantId    String    // Para multi-tenant
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Metric {
  id          String    @id @default(uuid())
  name        String
  value       Float
  type        String
  tenantId    String    // Para multi-tenant
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
} 